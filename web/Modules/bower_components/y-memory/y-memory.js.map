{"version":3,"sources":["../yjs/node_modules/browser-pack/_prelude.js","src/Memory.js","y-memory.js","src/RedBlackTree.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","extend","Y","Transaction","_Y$Transaction","store","this","_this","getPrototypeOf","ss","os","ds","Store","utils","RBTree","BufferedStore","createSmallLookupBuffer","Database","_Y$AbstractDatabase","y","opts","_this2","_createClass","key","requestTransaction","regeneratorRuntime","mark","_callee","wrap","_context","prev","next","console","log","connector","userId","t0","delegateYield","getStateSet","t2","t1","logTable","gc1","gc2","warn","JSON","stringify","listenersById","listenersByIdExecuteNow","transactionInProgress","stop","makeGen","gen","res","done","getNextRequest","destroy","_context2","_get","AbstractDatabase","defineProperties","target","props","descriptor","defineProperty","protoProps","staticProps","get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","undefined","parent","getter","./RedBlackTree.js",2,"_typeof","Symbol","iterator","obj","N","val","color","_left","_right","_parent","id","tree","newParent","right","newRight","left","root","p","newLeft","set","findNext","findWithLowerBound","abrupt","findPrev","findWithUpperBound","from","smaller","to","_context3","findNodeWithLowerBound","_context4","findNodeWithUpperBound","iterate","_context5","findSmallestNode","compareIds","filter","_context7","o_","_context6","push","table","find","_context8","findNode","Array","_delete","d","isFakeChild","child","_context9","blacken","isBlack","isRed","_fixDelete","node","sibling","redden","rotateLeft","rotateRight","put","v","_context10","_fixInsert","uncle","getUncle","grandparent","flush","_context11"],"mappings":"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","file":"y-memory.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/* global Y */\r\n'use strict'\r\n\r\nfunction extend (Y) {\r\n  require('./RedBlackTree.js')(Y)\r\n  class Transaction extends Y.Transaction {\r\n    constructor (store) {\r\n      super(store)\r\n      this.store = store\r\n      this.ss = store.ss\r\n      this.os = store.os\r\n      this.ds = store.ds\r\n    }\r\n  }\r\n  var Store = Y.utils.RBTree\r\n  var BufferedStore = Y.utils.createSmallLookupBuffer(Store)\r\n\r\n  class Database extends Y.AbstractDatabase {\r\n    constructor (y, opts) {\r\n      super(y, opts)\r\n      this.os = new BufferedStore()\r\n      this.ds = new Store()\r\n      this.ss = new BufferedStore()\r\n    }\r\n    logTable () {\r\n      var self = this\r\n      self.requestTransaction(function * () {\r\n        console.log('User: ', this.store.y.connector.userId, \"==============================\") // eslint-disable-line\r\n        console.log(\"State Set (SS):\", yield* this.getStateSet()) // eslint-disable-line\r\n        console.log(\"Operation Store (OS):\") // eslint-disable-line\r\n        yield* this.os.logTable() // eslint-disable-line\r\n        console.log(\"Deletion Store (DS):\") //eslint-disable-line\r\n        yield* this.ds.logTable() // eslint-disable-line\r\n        if (this.store.gc1.length > 0 || this.store.gc2.length > 0) {\r\n          console.warn('GC1|2 not empty!', this.store.gc1, this.store.gc2)\r\n        }\r\n        if (JSON.stringify(this.store.listenersById) !== '{}') {\r\n          console.warn('listenersById not empty!')\r\n        }\r\n        if (JSON.stringify(this.store.listenersByIdExecuteNow) !== '[]') {\r\n          console.warn('listenersByIdExecuteNow not empty!')\r\n        }\r\n        if (this.store.transactionInProgress) {\r\n          console.warn('Transaction still in progress!')\r\n        }\r\n      }, true)\r\n    }\r\n    transact (makeGen) {\r\n      var t = new Transaction(this)\r\n      while (makeGen !== null) {\r\n        var gen = makeGen.call(t)\r\n        var res = gen.next()\r\n        while (!res.done) {\r\n          res = gen.next(res.value)\r\n        }\r\n        makeGen = this.getNextRequest()\r\n      }\r\n    }\r\n    * destroy () {\r\n      yield* super.destroy()\r\n      delete this.os\r\n      delete this.ss\r\n      delete this.ds\r\n    }\r\n  }\r\n  Y.extend('memory', Database)\r\n}\r\n\r\nmodule.exports = extend\r\nif (typeof Y !== 'undefined') {\r\n  extend(Y)\r\n}\r\n",null,"'use strict'\r\n\r\n/*\r\n  This file contains a not so fancy implemantion of a Red Black Tree.\r\n*/\r\nmodule.exports = function (Y) {\r\n  class N {\r\n    // A created node is always red!\r\n    constructor (val) {\r\n      this.val = val\r\n      this.color = true\r\n      this._left = null\r\n      this._right = null\r\n      this._parent = null\r\n      if (val.id === null) {\r\n        throw new Error('You must define id!')\r\n      }\r\n    }\r\n    isRed () { return this.color }\r\n    isBlack () { return !this.color }\r\n    redden () { this.color = true; return this }\r\n    blacken () { this.color = false; return this }\r\n    get grandparent () {\r\n      return this.parent.parent\r\n    }\r\n    get parent () {\r\n      return this._parent\r\n    }\r\n    get sibling () {\r\n      return (this === this.parent.left)\r\n        ? this.parent.right : this.parent.left\r\n    }\r\n    get left () {\r\n      return this._left\r\n    }\r\n    get right () {\r\n      return this._right\r\n    }\r\n    set left (n) {\r\n      if (n !== null) {\r\n        n._parent = this\r\n      }\r\n      this._left = n\r\n    }\r\n    set right (n) {\r\n      if (n !== null) {\r\n        n._parent = this\r\n      }\r\n      this._right = n\r\n    }\r\n    rotateLeft (tree) {\r\n      var parent = this.parent\r\n      var newParent = this.right\r\n      var newRight = this.right.left\r\n      newParent.left = this\r\n      this.right = newRight\r\n      if (parent === null) {\r\n        tree.root = newParent\r\n        newParent._parent = null\r\n      } else if (parent.left === this) {\r\n        parent.left = newParent\r\n      } else if (parent.right === this) {\r\n        parent.right = newParent\r\n      } else {\r\n        throw new Error('The elements are wrongly connected!')\r\n      }\r\n    }\r\n    next () {\r\n      if (this.right !== null) {\r\n        // search the most left node in the right tree\r\n        var o = this.right\r\n        while (o.left !== null) {\r\n          o = o.left\r\n        }\r\n        return o\r\n      } else {\r\n        var p = this\r\n        while (p.parent !== null && p !== p.parent.left) {\r\n          p = p.parent\r\n        }\r\n        return p.parent\r\n      }\r\n    }\r\n    prev () {\r\n      if (this.left !== null) {\r\n        // search the most right node in the left tree\r\n        var o = this.left\r\n        while (o.right !== null) {\r\n          o = o.right\r\n        }\r\n        return o\r\n      } else {\r\n        var p = this\r\n        while (p.parent !== null && p !== p.parent.right) {\r\n          p = p.parent\r\n        }\r\n        return p.parent\r\n      }\r\n    }\r\n    rotateRight (tree) {\r\n      var parent = this.parent\r\n      var newParent = this.left\r\n      var newLeft = this.left.right\r\n      newParent.right = this\r\n      this.left = newLeft\r\n      if (parent === null) {\r\n        tree.root = newParent\r\n        newParent._parent = null\r\n      } else if (parent.left === this) {\r\n        parent.left = newParent\r\n      } else if (parent.right === this) {\r\n        parent.right = newParent\r\n      } else {\r\n        throw new Error('The elements are wrongly connected!')\r\n      }\r\n    }\r\n    getUncle () {\r\n      // we can assume that grandparent exists when this is called!\r\n      if (this.parent === this.parent.parent.left) {\r\n        return this.parent.parent.right\r\n      } else {\r\n        return this.parent.parent.left\r\n      }\r\n    }\r\n  }\r\n\r\n  class RBTree {\r\n    constructor () {\r\n      this.root = null\r\n      this.length = 0\r\n    }\r\n    * findNext (id) {\r\n      return yield* this.findWithLowerBound([id[0], id[1] + 1])\r\n    }\r\n    * findPrev (id) {\r\n      return yield* this.findWithUpperBound([id[0], id[1] - 1])\r\n    }\r\n    findNodeWithLowerBound (from) {\r\n      if (from === void 0) {\r\n        throw new Error('You must define from!')\r\n      }\r\n      var o = this.root\r\n      if (o === null) {\r\n        return null\r\n      } else {\r\n        while (true) {\r\n          if ((from === null || Y.utils.smaller(from, o.val.id)) && o.left !== null) {\r\n            // o is included in the bound\r\n            // try to find an element that is closer to the bound\r\n            o = o.left\r\n          } else if (from !== null && Y.utils.smaller(o.val.id, from)) {\r\n            // o is not within the bound, maybe one of the right elements is..\r\n            if (o.right !== null) {\r\n              o = o.right\r\n            } else {\r\n              // there is no right element. Search for the next bigger element,\r\n              // this should be within the bounds\r\n              return o.next()\r\n            }\r\n          } else {\r\n            return o\r\n          }\r\n        }\r\n      }\r\n    }\r\n    findNodeWithUpperBound (to) {\r\n      if (to === void 0) {\r\n        throw new Error('You must define from!')\r\n      }\r\n      var o = this.root\r\n      if (o === null) {\r\n        return null\r\n      } else {\r\n        while (true) {\r\n          if ((to === null || Y.utils.smaller(o.val.id, to)) && o.right !== null) {\r\n            // o is included in the bound\r\n            // try to find an element that is closer to the bound\r\n            o = o.right\r\n          } else if (to !== null && Y.utils.smaller(to, o.val.id)) {\r\n            // o is not within the bound, maybe one of the left elements is..\r\n            if (o.left !== null) {\r\n              o = o.left\r\n            } else {\r\n              // there is no left element. Search for the prev smaller element,\r\n              // this should be within the bounds\r\n              return o.prev()\r\n            }\r\n          } else {\r\n            return o\r\n          }\r\n        }\r\n      }\r\n    }\r\n    findSmallestNode () {\r\n      var o = this.root\r\n      while (o != null && o.left != null) {\r\n        o = o.left\r\n      }\r\n      return o\r\n    }\r\n    * findWithLowerBound (from) {\r\n      var n = this.findNodeWithLowerBound(from)\r\n      return n == null ? null : n.val\r\n    }\r\n    * findWithUpperBound (to) {\r\n      var n = this.findNodeWithUpperBound(to)\r\n      return n == null ? null : n.val\r\n    }\r\n    * iterate (t, from, to, f) {\r\n      var o\r\n      if (from === null) {\r\n        o = this.findSmallestNode()\r\n      } else {\r\n        o = this.findNodeWithLowerBound(from)\r\n      }\r\n      while (o !== null && (to === null || Y.utils.smaller(o.val.id, to) || Y.utils.compareIds(o.val.id, to))) {\r\n        yield* f.call(t, o.val)\r\n        o = o.next()\r\n      }\r\n      return true\r\n    }\r\n    * logTable (from, to, filter) {\r\n      if (filter == null) {\r\n        filter = function () {\r\n          return true\r\n        }\r\n      }\r\n      if (from == null) { from = null }\r\n      if (to == null) { to = null }\r\n      var os = []\r\n      yield* this.iterate(this, from, to, function * (o) {\r\n        if (filter(o)) {\r\n          var o_ = {}\r\n          for (var key in o) {\r\n            if (typeof o[key] === 'object') {\r\n              o_[key] = JSON.stringify(o[key])\r\n            } else {\r\n              o_[key] = o[key]\r\n            }\r\n          }\r\n          os.push(o_)\r\n        }\r\n      })\r\n      if (console.table != null) {\r\n        console.table(os)\r\n      }\r\n    }\r\n    * find (id) {\r\n      var n\r\n      return (n = this.findNode(id)) ? n.val : null\r\n    }\r\n    findNode (id) {\r\n      if (id == null || id.constructor !== Array) {\r\n        throw new Error('Expect id to be an array!')\r\n      }\r\n      var o = this.root\r\n      if (o === null) {\r\n        return false\r\n      } else {\r\n        while (true) {\r\n          if (o === null) {\r\n            return false\r\n          }\r\n          if (Y.utils.smaller(id, o.val.id)) {\r\n            o = o.left\r\n          } else if (Y.utils.smaller(o.val.id, id)) {\r\n            o = o.right\r\n          } else {\r\n            return o\r\n          }\r\n        }\r\n      }\r\n    }\r\n    * delete (id) {\r\n      if (id == null || id.constructor !== Array) {\r\n        throw new Error('id is expected to be an Array!')\r\n      }\r\n      var d = this.findNode(id)\r\n      if (d == null) {\r\n        // throw new Error('Element does not exist!')\r\n        return\r\n      }\r\n      this.length--\r\n      if (d.left !== null && d.right !== null) {\r\n        // switch d with the greates element in the left subtree.\r\n        // o should have at most one child.\r\n        var o = d.left\r\n        // find\r\n        while (o.right !== null) {\r\n          o = o.right\r\n        }\r\n        // switch\r\n        d.val = o.val\r\n        d = o\r\n      }\r\n      // d has at most one child\r\n      // let n be the node that replaces d\r\n      var isFakeChild\r\n      var child = d.left || d.right\r\n      if (child === null) {\r\n        isFakeChild = true\r\n        child = new N({id: 0})\r\n        child.blacken()\r\n        d.right = child\r\n      } else {\r\n        isFakeChild = false\r\n      }\r\n\r\n      if (d.parent === null) {\r\n        if (!isFakeChild) {\r\n          this.root = child\r\n          child.blacken()\r\n          child._parent = null\r\n        } else {\r\n          this.root = null\r\n        }\r\n        return\r\n      } else if (d.parent.left === d) {\r\n        d.parent.left = child\r\n      } else if (d.parent.right === d) {\r\n        d.parent.right = child\r\n      } else {\r\n        throw new Error('Impossible!')\r\n      }\r\n      if (d.isBlack()) {\r\n        if (child.isRed()) {\r\n          child.blacken()\r\n        } else {\r\n          this._fixDelete(child)\r\n        }\r\n      }\r\n      this.root.blacken()\r\n      if (isFakeChild) {\r\n        if (child.parent.left === child) {\r\n          child.parent.left = null\r\n        } else if (child.parent.right === child) {\r\n          child.parent.right = null\r\n        } else {\r\n          throw new Error('Impossible #3')\r\n        }\r\n      }\r\n    }\r\n    _fixDelete (n) {\r\n      function isBlack (node) {\r\n        return node !== null ? node.isBlack() : true\r\n      }\r\n      function isRed (node) {\r\n        return node !== null ? node.isRed() : false\r\n      }\r\n      if (n.parent === null) {\r\n        // this can only be called after the first iteration of fixDelete.\r\n        return\r\n      }\r\n      // d was already replaced by the child\r\n      // d is not the root\r\n      // d and child are black\r\n      var sibling = n.sibling\r\n      if (isRed(sibling)) {\r\n        // make sibling the grandfather\r\n        n.parent.redden()\r\n        sibling.blacken()\r\n        if (n === n.parent.left) {\r\n          n.parent.rotateLeft(this)\r\n        } else if (n === n.parent.right) {\r\n          n.parent.rotateRight(this)\r\n        } else {\r\n          throw new Error('Impossible #2')\r\n        }\r\n        sibling = n.sibling\r\n      }\r\n      // parent, sibling, and children of n are black\r\n      if (n.parent.isBlack() &&\r\n        sibling.isBlack() &&\r\n        isBlack(sibling.left) &&\r\n        isBlack(sibling.right)\r\n      ) {\r\n        sibling.redden()\r\n        this._fixDelete(n.parent)\r\n      } else if (n.parent.isRed() &&\r\n        sibling.isBlack() &&\r\n        isBlack(sibling.left) &&\r\n        isBlack(sibling.right)\r\n      ) {\r\n        sibling.redden()\r\n        n.parent.blacken()\r\n      } else {\r\n        if (n === n.parent.left &&\r\n          sibling.isBlack() &&\r\n          isRed(sibling.left) &&\r\n          isBlack(sibling.right)\r\n        ) {\r\n          sibling.redden()\r\n          sibling.left.blacken()\r\n          sibling.rotateRight(this)\r\n          sibling = n.sibling\r\n        } else if (n === n.parent.right &&\r\n          sibling.isBlack() &&\r\n          isRed(sibling.right) &&\r\n          isBlack(sibling.left)\r\n        ) {\r\n          sibling.redden()\r\n          sibling.right.blacken()\r\n          sibling.rotateLeft(this)\r\n          sibling = n.sibling\r\n        }\r\n        sibling.color = n.parent.color\r\n        n.parent.blacken()\r\n        if (n === n.parent.left) {\r\n          sibling.right.blacken()\r\n          n.parent.rotateLeft(this)\r\n        } else {\r\n          sibling.left.blacken()\r\n          n.parent.rotateRight(this)\r\n        }\r\n      }\r\n    }\r\n    * put (v) {\r\n      if (v == null || v.id == null || v.id.constructor !== Array) {\r\n        throw new Error('v is expected to have an id property which is an Array!')\r\n      }\r\n      var node = new N(v)\r\n      if (this.root !== null) {\r\n        var p = this.root // p abbrev. parent\r\n        while (true) {\r\n          if (Y.utils.smaller(node.val.id, p.val.id)) {\r\n            if (p.left === null) {\r\n              p.left = node\r\n              break\r\n            } else {\r\n              p = p.left\r\n            }\r\n          } else if (Y.utils.smaller(p.val.id, node.val.id)) {\r\n            if (p.right === null) {\r\n              p.right = node\r\n              break\r\n            } else {\r\n              p = p.right\r\n            }\r\n          } else {\r\n            p.val = node.val\r\n            return p\r\n          }\r\n        }\r\n        this._fixInsert(node)\r\n      } else {\r\n        this.root = node\r\n      }\r\n      this.length++\r\n      this.root.blacken()\r\n      return node\r\n    }\r\n    _fixInsert (n) {\r\n      if (n.parent === null) {\r\n        n.blacken()\r\n        return\r\n      } else if (n.parent.isBlack()) {\r\n        return\r\n      }\r\n      var uncle = n.getUncle()\r\n      if (uncle !== null && uncle.isRed()) {\r\n        // Note: parent: red, uncle: red\r\n        n.parent.blacken()\r\n        uncle.blacken()\r\n        n.grandparent.redden()\r\n        this._fixInsert(n.grandparent)\r\n      } else {\r\n        // Note: parent: red, uncle: black or null\r\n        // Now we transform the tree in such a way that\r\n        // either of these holds:\r\n        //   1) grandparent.left.isRed\r\n        //     and grandparent.left.left.isRed\r\n        //   2) grandparent.right.isRed\r\n        //     and grandparent.right.right.isRed\r\n        if (n === n.parent.right && n.parent === n.grandparent.left) {\r\n          n.parent.rotateLeft(this)\r\n          // Since we rotated and want to use the previous\r\n          // cases, we need to set n in such a way that\r\n          // n.parent.isRed again\r\n          n = n.left\r\n        } else if (n === n.parent.left && n.parent === n.grandparent.right) {\r\n          n.parent.rotateRight(this)\r\n          // see above\r\n          n = n.right\r\n        }\r\n        // Case 1) or 2) hold from here on.\r\n        // Now traverse grandparent, make parent a black node\r\n        // on the highest level which holds two red nodes.\r\n        n.parent.blacken()\r\n        n.grandparent.redden()\r\n        if (n === n.parent.left) {\r\n          // Case 1\r\n          n.grandparent.rotateRight(this)\r\n        } else {\r\n          // Case 2\r\n          n.grandparent.rotateLeft(this)\r\n        }\r\n      }\r\n    }\r\n    * flush () {}\r\n  }\r\n\r\n  Y.utils.RBTree = RBTree\r\n}\r\n"],"sourceRoot":"/source/"}