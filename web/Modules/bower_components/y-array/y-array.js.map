{"version":3,"sources":["../yjs/node_modules/browserify/node_modules/browser-pack/_prelude.js","src/Array.js","y-array.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","_classCallCheck","instance","Constructor","TypeError","extend","Y","YArray","os","_model","_content","_this","this","eventHandler","utils","EventHandler","op","struct","pos","left","findIndex","c","compareIds","id","values","hasOwnProperty","splice","type","opContent","Promise","resolve","requestTransaction","regeneratorRuntime","mark","_callee","wrap","_context","prev","next","delegateYield","getType","t0","stop","contents","content","map","val","apply","concat","callEventListeners","object","index","inDeletionRange","delLength","target","_values","_createClass","key","value","destroy","_this2","oid","_callee2","_context2","x","insert","Array","mostLeft","ops","newTypes","prevId","typeDefinition","origin","parent","isTypeDefinition","push","getNextOpId","typeid","_callee3","mostRight","ml","j","_context3","getInsertionCleanEnd","right","getOperation","t1","start","createType","awaitOps","applyCreatedOperations","awaitAndPrematurelyCall","dels","targetId","_callee4","_context4","addEventListener","removeEventListener","_changed","transaction","_context5","deleted","getInsertion","abrupt","receivedOp","get","CustomType","name","class","initType","YArrayInitializer","model","_context6","Struct","List","forEach","defineProperties","props","descriptor","enumerable","configurable","writable","Object","defineProperty","protoProps","staticProps","prototype"],"mappings":"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","file":"y-array.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/* global Y */\n'use strict'\n\nfunction extend (Y) {\n  class YArray {\n    constructor (os, _model, _content) {\n      this.os = os\n      this._model = _model\n      // Array of all the neccessary content\n      this._content = _content\n      this.eventHandler = new Y.utils.EventHandler((op) => {\n        if (op.struct === 'Insert') {\n          let pos\n          // we check op.left only!,\n          // because op.right might not be defined when this is called\n          if (op.left === null) {\n            pos = 0\n          } else {\n            pos = 1 + this._content.findIndex(function (c) {\n              return Y.utils.compareIds(c.id, op.left)\n            })\n            if (pos <= 0) {\n              throw new Error('Unexpected operation!')\n            }\n          }\n          var values\n          var length\n          if (op.hasOwnProperty('opContent')) {\n            this._content.splice(pos, 0, {\n              id: op.id,\n              type: op.opContent\n            })\n            let opContent = op.opContent\n            length = 1\n            values = () => {\n              return new Promise((resolve) => {\n                this.os.requestTransaction(function *() {\n                  var type = yield* this.getType(opContent)\n                  resolve([type])\n                })\n              })\n            }\n          } else {\n            var contents = op.content.map(function (c, i) {\n              return {\n                id: [op.id[0], op.id[1] + i],\n                val: c\n              }\n            })\n            // insert value in _content\n            this._content.splice.apply(this._content, [pos, 0].concat(contents))\n            values = op.content\n            length = op.content.length\n          }\n          this.eventHandler.callEventListeners({\n            type: 'insert',\n            object: this,\n            index: pos,\n            values: values,\n            // valueId: valueId, // TODO: does this still work as expected?\n            length: length\n          })\n        } else if (op.struct === 'Delete') {\n          var i = 0 // current position in _content\n          for (; i < this._content.length && op.length > 0; i++) {\n            var c = this._content[i]\n            if (Y.utils.inDeletionRange(op, c.id)) {\n              // is in deletion range!\n              var delLength\n              // check how many character to delete in one flush\n              for (delLength = 1;\n                    delLength < op.length && i + delLength < this._content.length && Y.utils.inDeletionRange(op, this._content[i + delLength].id);\n                    delLength++) {}\n              // last operation thas will be deleted\n              c = this._content[i + delLength - 1]\n              // update delete operation\n              op.length -= c.id[1] - op.target[1] + 1\n              op.target = [c.id[0], c.id[1] + 1]\n              // apply deletion & find send event\n              let content = this._content.splice(i, delLength)\n              // TODO: how about return types\n              let values = content.map(function (c) { return c.val })\n              this.eventHandler.callEventListeners({\n                type: 'delete',\n                object: this,\n                index: i,\n                values: values,\n                _content: content,\n                length: delLength\n              })\n              // with the fresh delete op, we can continue\n              // note: we don't have to increment i, because the i-th content was deleted\n              // but on the other had, the (i+delLength)-th was not in deletion range\n              // So we don't do i--\n            }\n          }\n        } else {\n          throw new Error('Unexpected struct!')\n        }\n      })\n    }\n    _destroy () {\n      this.eventHandler.destroy()\n      this.eventHandler = null\n      this._content = null\n      this._model = null\n      this.os = null\n    }\n    get length () {\n      return this._content.length\n    }\n    get (pos) {\n      if (pos == null || typeof pos !== 'number') {\n        throw new Error('pos must be a number!')\n      }\n      if (pos >= this._content.length) {\n        return undefined\n      }\n      if (this._content[pos].type == null) {\n        return this._content[pos].val\n      } else {\n        var oid = this._content[pos].type\n        return new Promise((resolve) => {\n          this.os.requestTransaction(function *() {\n            var type = yield* this.getType(oid)\n            resolve(type)\n          })\n        })\n      }\n    }\n    // only returns primitive values\n    toArray () {\n      return this._content.map(function (x, i) {\n        return x.val\n      })\n    }\n    push (contents) {\n      return this.insert(this._content.length, contents)\n    }\n    insert (pos, contents) {\n      if (typeof pos !== 'number') {\n        throw new Error('pos must be a number!')\n      }\n      if (!(contents instanceof Array)) {\n        throw new Error('contents must be an Array of objects!')\n      }\n      if (contents.length === 0) {\n        return\n      }\n      if (pos > this._content.length || pos < 0) {\n        throw new Error('This position exceeds the range of the array!')\n      }\n      var mostLeft = pos === 0 ? null : this._content[pos - 1].id\n\n      var ops = []\n      var newTypes = []\n      var prevId = mostLeft\n      for (var i = 0; i < contents.length;) {\n        var op = {\n          left: prevId,\n          origin: prevId,\n          // right: mostRight,\n          // NOTE: I intentionally do not define right here, because it could be deleted\n          // at the time of inserting this operation (when we get the transaction),\n          // and would therefore not defined in this._content\n          parent: this._model,\n          struct: 'Insert'\n        }\n        var _content = []\n        var typeDefinition\n        while (i < contents.length) {\n          var val = contents[i++]\n          typeDefinition = Y.utils.isTypeDefinition(val)\n          if (!typeDefinition) {\n            _content.push(val)\n          } else if (_content.length > 0) {\n            i-- // come back again later\n            break\n          } else {\n            break\n          }\n        }\n        if (_content.length > 0) {\n          // content is defined\n          op.content = _content\n          op.id = this.os.getNextOpId(_content.length)\n        } else {\n          // otherwise its a type\n          var typeid = this.os.getNextOpId(1)\n          newTypes.push([typeDefinition, typeid])\n          op.opContent = typeid\n          op.id = this.os.getNextOpId(1)\n        }\n        ops.push(op)\n        prevId = op.id\n      }\n      var eventHandler = this.eventHandler\n      this.os.requestTransaction(function *() {\n        // now we can set the right reference.\n        var mostRight\n        if (mostLeft != null) {\n          var ml = yield* this.getInsertionCleanEnd(mostLeft)\n          mostRight = ml.right\n        } else {\n          mostRight = (yield* this.getOperation(ops[0].parent)).start\n        }\n        for (var i = 0; i < newTypes.length; i++) {\n          yield* this.createType.apply(this, newTypes[i])\n        }\n        for (var j = 0; j < ops.length; j++) {\n          var op = ops[j]\n          op.right = mostRight\n        }\n        yield* eventHandler.awaitOps(this, this.applyCreatedOperations, [ops])\n      })\n      eventHandler.awaitAndPrematurelyCall(ops)\n    }\n    delete (pos, length) {\n      if (length == null) { length = 1 }\n      if (typeof length !== 'number') {\n        throw new Error('length must be a number!')\n      }\n      if (typeof pos !== 'number') {\n        throw new Error('pos must be a number!')\n      }\n      if (pos + length > this._content.length || pos < 0 || length < 0) {\n        throw new Error('The deletion range exceeds the range of the array!')\n      }\n      if (length === 0) {\n        return\n      }\n      var eventHandler = this.eventHandler\n      var dels = []\n      for (var i = 0; i < length; i = i + delLength) {\n        var targetId = this._content[pos + i].id\n        var delLength\n        // how many insertions can we delete in one deletion?\n        for (delLength = 1; i + delLength < length; delLength++) {\n          if (!Y.utils.compareIds(this._content[pos + i + delLength].id, [targetId[0], targetId[1] + delLength])) {\n            break\n          }\n        }\n        dels.push({\n          target: targetId,\n          struct: 'Delete',\n          length: delLength\n        })\n      }\n      eventHandler.awaitAndPrematurelyCall(dels)\n      this.os.requestTransaction(function *() {\n        yield* eventHandler.awaitOps(this, this.applyCreatedOperations, [dels])\n      })\n    }\n    observe (f) {\n      this.eventHandler.addEventListener(f)\n    }\n    unobserve (f) {\n      this.eventHandler.removeEventListener(f)\n    }\n    * _changed (transaction, op) {\n      if (!op.deleted) {\n        if (op.struct === 'Insert') {\n          var l = op.left\n          var left\n          while (l != null) {\n            left = yield* transaction.getInsertion(l)\n            if (!left.deleted) {\n              break\n            }\n            l = left.left\n          }\n          op.left = l\n        }\n        this.eventHandler.receivedOp(op)\n      }\n    }\n  }\n\n  Y.extend('Array', new Y.utils.CustomType({\n    name: 'Array',\n    class: YArray,\n    struct: 'List',\n    initType: function * YArrayInitializer (os, model) {\n      var _content = []\n      yield* Y.Struct.List.map.call(this, model, function (op) {\n        if (op.hasOwnProperty('opContent')) {\n          _content.push({\n            id: op.id,\n            type: op.opContent\n          })\n        } else {\n          op.content.forEach(function (c, i) {\n            _content.push({\n              id: [op.id[0], op.id[1] + i],\n              val: op.content[i]\n            })\n          })\n        }\n      })\n      return new YArray(os, model.id, _content)\n    }\n  }))\n}\n\nmodule.exports = extend\nif (typeof Y !== 'undefined') {\n  extend(Y)\n}\n","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/* global Y */\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction extend(Y) {\n  var YArray = function () {\n    function YArray(os, _model, _content) {\n      var _this = this;\n\n      _classCallCheck(this, YArray);\n\n      this.os = os;\n      this._model = _model;\n      // Array of all the neccessary content\n      this._content = _content;\n      this.eventHandler = new Y.utils.EventHandler(function (op) {\n        if (op.struct === 'Insert') {\n          var pos = void 0;\n          // we check op.left only!,\n          // because op.right might not be defined when this is called\n          if (op.left === null) {\n            pos = 0;\n          } else {\n            pos = 1 + _this._content.findIndex(function (c) {\n              return Y.utils.compareIds(c.id, op.left);\n            });\n            if (pos <= 0) {\n              throw new Error('Unexpected operation!');\n            }\n          }\n          var values;\n          var length;\n          if (op.hasOwnProperty('opContent')) {\n            (function () {\n              _this._content.splice(pos, 0, {\n                id: op.id,\n                type: op.opContent\n              });\n              var opContent = op.opContent;\n              length = 1;\n              values = function values() {\n                return new Promise(function (resolve) {\n                  _this.os.requestTransaction(regeneratorRuntime.mark(function _callee() {\n                    var type;\n                    return regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            return _context.delegateYield(this.getType(opContent), 't0', 1);\n\n                          case 1:\n                            type = _context.t0;\n\n                            resolve([type]);\n\n                          case 3:\n                          case 'end':\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee, this);\n                  }));\n                });\n              };\n            })();\n          } else {\n            var contents = op.content.map(function (c, i) {\n              return {\n                id: [op.id[0], op.id[1] + i],\n                val: c\n              };\n            });\n            // insert value in _content\n            _this._content.splice.apply(_this._content, [pos, 0].concat(contents));\n            values = op.content;\n            length = op.content.length;\n          }\n          _this.eventHandler.callEventListeners({\n            type: 'insert',\n            object: _this,\n            index: pos,\n            values: values,\n            // valueId: valueId, // TODO: does this still work as expected?\n            length: length\n          });\n        } else if (op.struct === 'Delete') {\n          var i = 0; // current position in _content\n          for (; i < _this._content.length && op.length > 0; i++) {\n            var c = _this._content[i];\n            if (Y.utils.inDeletionRange(op, c.id)) {\n              // is in deletion range!\n              var delLength;\n              // check how many character to delete in one flush\n              for (delLength = 1; delLength < op.length && i + delLength < _this._content.length && Y.utils.inDeletionRange(op, _this._content[i + delLength].id); delLength++) {}\n              // last operation thas will be deleted\n              c = _this._content[i + delLength - 1];\n              // update delete operation\n              op.length -= c.id[1] - op.target[1] + 1;\n              op.target = [c.id[0], c.id[1] + 1];\n              // apply deletion & find send event\n              var content = _this._content.splice(i, delLength);\n              // TODO: how about return types\n              var _values = content.map(function (c) {\n                return c.val;\n              });\n              _this.eventHandler.callEventListeners({\n                type: 'delete',\n                object: _this,\n                index: i,\n                values: _values,\n                _content: content,\n                length: delLength\n              });\n              // with the fresh delete op, we can continue\n              // note: we don't have to increment i, because the i-th content was deleted\n              // but on the other had, the (i+delLength)-th was not in deletion range\n              // So we don't do i--\n            }\n          }\n        } else {\n            throw new Error('Unexpected struct!');\n          }\n      });\n    }\n\n    _createClass(YArray, [{\n      key: '_destroy',\n      value: function _destroy() {\n        this.eventHandler.destroy();\n        this.eventHandler = null;\n        this._content = null;\n        this._model = null;\n        this.os = null;\n      }\n    }, {\n      key: 'get',\n      value: function get(pos) {\n        var _this2 = this;\n\n        if (pos == null || typeof pos !== 'number') {\n          throw new Error('pos must be a number!');\n        }\n        if (pos >= this._content.length) {\n          return undefined;\n        }\n        if (this._content[pos].type == null) {\n          return this._content[pos].val;\n        } else {\n          var oid = this._content[pos].type;\n          return new Promise(function (resolve) {\n            _this2.os.requestTransaction(regeneratorRuntime.mark(function _callee2() {\n              var type;\n              return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      return _context2.delegateYield(this.getType(oid), 't0', 1);\n\n                    case 1:\n                      type = _context2.t0;\n\n                      resolve(type);\n\n                    case 3:\n                    case 'end':\n                      return _context2.stop();\n                  }\n                }\n              }, _callee2, this);\n            }));\n          });\n        }\n      }\n      // only returns primitive values\n\n    }, {\n      key: 'toArray',\n      value: function toArray() {\n        return this._content.map(function (x, i) {\n          return x.val;\n        });\n      }\n    }, {\n      key: 'push',\n      value: function push(contents) {\n        return this.insert(this._content.length, contents);\n      }\n    }, {\n      key: 'insert',\n      value: function insert(pos, contents) {\n        if (typeof pos !== 'number') {\n          throw new Error('pos must be a number!');\n        }\n        if (!(contents instanceof Array)) {\n          throw new Error('contents must be an Array of objects!');\n        }\n        if (contents.length === 0) {\n          return;\n        }\n        if (pos > this._content.length || pos < 0) {\n          throw new Error('This position exceeds the range of the array!');\n        }\n        var mostLeft = pos === 0 ? null : this._content[pos - 1].id;\n\n        var ops = [];\n        var newTypes = [];\n        var prevId = mostLeft;\n        for (var i = 0; i < contents.length;) {\n          var op = {\n            left: prevId,\n            origin: prevId,\n            // right: mostRight,\n            // NOTE: I intentionally do not define right here, because it could be deleted\n            // at the time of inserting this operation (when we get the transaction),\n            // and would therefore not defined in this._content\n            parent: this._model,\n            struct: 'Insert'\n          };\n          var _content = [];\n          var typeDefinition;\n          while (i < contents.length) {\n            var val = contents[i++];\n            typeDefinition = Y.utils.isTypeDefinition(val);\n            if (!typeDefinition) {\n              _content.push(val);\n            } else if (_content.length > 0) {\n              i--; // come back again later\n              break;\n            } else {\n              break;\n            }\n          }\n          if (_content.length > 0) {\n            // content is defined\n            op.content = _content;\n            op.id = this.os.getNextOpId(_content.length);\n          } else {\n            // otherwise its a type\n            var typeid = this.os.getNextOpId(1);\n            newTypes.push([typeDefinition, typeid]);\n            op.opContent = typeid;\n            op.id = this.os.getNextOpId(1);\n          }\n          ops.push(op);\n          prevId = op.id;\n        }\n        var eventHandler = this.eventHandler;\n        this.os.requestTransaction(regeneratorRuntime.mark(function _callee3() {\n          var mostRight, ml, i, j, op;\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  if (!(mostLeft != null)) {\n                    _context3.next = 6;\n                    break;\n                  }\n\n                  return _context3.delegateYield(this.getInsertionCleanEnd(mostLeft), 't0', 2);\n\n                case 2:\n                  ml = _context3.t0;\n\n                  mostRight = ml.right;\n                  _context3.next = 8;\n                  break;\n\n                case 6:\n                  return _context3.delegateYield(this.getOperation(ops[0].parent), 't1', 7);\n\n                case 7:\n                  mostRight = _context3.t1.start;\n\n                case 8:\n                  i = 0;\n\n                case 9:\n                  if (!(i < newTypes.length)) {\n                    _context3.next = 14;\n                    break;\n                  }\n\n                  return _context3.delegateYield(this.createType.apply(this, newTypes[i]), 't2', 11);\n\n                case 11:\n                  i++;\n                  _context3.next = 9;\n                  break;\n\n                case 14:\n                  for (j = 0; j < ops.length; j++) {\n                    op = ops[j];\n\n                    op.right = mostRight;\n                  }\n                  return _context3.delegateYield(eventHandler.awaitOps(this, this.applyCreatedOperations, [ops]), 't3', 16);\n\n                case 16:\n                case 'end':\n                  return _context3.stop();\n              }\n            }\n          }, _callee3, this);\n        }));\n        eventHandler.awaitAndPrematurelyCall(ops);\n      }\n    }, {\n      key: 'delete',\n      value: function _delete(pos, length) {\n        if (length == null) {\n          length = 1;\n        }\n        if (typeof length !== 'number') {\n          throw new Error('length must be a number!');\n        }\n        if (typeof pos !== 'number') {\n          throw new Error('pos must be a number!');\n        }\n        if (pos + length > this._content.length || pos < 0 || length < 0) {\n          throw new Error('The deletion range exceeds the range of the array!');\n        }\n        if (length === 0) {\n          return;\n        }\n        var eventHandler = this.eventHandler;\n        var dels = [];\n        for (var i = 0; i < length; i = i + delLength) {\n          var targetId = this._content[pos + i].id;\n          var delLength;\n          // how many insertions can we delete in one deletion?\n          for (delLength = 1; i + delLength < length; delLength++) {\n            if (!Y.utils.compareIds(this._content[pos + i + delLength].id, [targetId[0], targetId[1] + delLength])) {\n              break;\n            }\n          }\n          dels.push({\n            target: targetId,\n            struct: 'Delete',\n            length: delLength\n          });\n        }\n        eventHandler.awaitAndPrematurelyCall(dels);\n        this.os.requestTransaction(regeneratorRuntime.mark(function _callee4() {\n          return regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  return _context4.delegateYield(eventHandler.awaitOps(this, this.applyCreatedOperations, [dels]), 't0', 1);\n\n                case 1:\n                case 'end':\n                  return _context4.stop();\n              }\n            }\n          }, _callee4, this);\n        }));\n      }\n    }, {\n      key: 'observe',\n      value: function observe(f) {\n        this.eventHandler.addEventListener(f);\n      }\n    }, {\n      key: 'unobserve',\n      value: function unobserve(f) {\n        this.eventHandler.removeEventListener(f);\n      }\n    }, {\n      key: '_changed',\n      value: regeneratorRuntime.mark(function _changed(transaction, op) {\n        var l, left;\n        return regeneratorRuntime.wrap(function _changed$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (op.deleted) {\n                  _context5.next = 13;\n                  break;\n                }\n\n                if (!(op.struct === 'Insert')) {\n                  _context5.next = 12;\n                  break;\n                }\n\n                l = op.left;\n\n              case 3:\n                if (!(l != null)) {\n                  _context5.next = 11;\n                  break;\n                }\n\n                return _context5.delegateYield(transaction.getInsertion(l), 't0', 5);\n\n              case 5:\n                left = _context5.t0;\n\n                if (left.deleted) {\n                  _context5.next = 8;\n                  break;\n                }\n\n                return _context5.abrupt('break', 11);\n\n              case 8:\n                l = left.left;\n                _context5.next = 3;\n                break;\n\n              case 11:\n                op.left = l;\n\n              case 12:\n                this.eventHandler.receivedOp(op);\n\n              case 13:\n              case 'end':\n                return _context5.stop();\n            }\n          }\n        }, _changed, this);\n      })\n    }, {\n      key: 'length',\n      get: function get() {\n        return this._content.length;\n      }\n    }]);\n\n    return YArray;\n  }();\n\n  Y.extend('Array', new Y.utils.CustomType({\n    name: 'Array',\n    class: YArray,\n    struct: 'List',\n    initType: regeneratorRuntime.mark(function YArrayInitializer(os, model) {\n      var _content;\n\n      return regeneratorRuntime.wrap(function YArrayInitializer$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _content = [];\n              return _context6.delegateYield(Y.Struct.List.map.call(this, model, function (op) {\n                if (op.hasOwnProperty('opContent')) {\n                  _content.push({\n                    id: op.id,\n                    type: op.opContent\n                  });\n                } else {\n                  op.content.forEach(function (c, i) {\n                    _content.push({\n                      id: [op.id[0], op.id[1] + i],\n                      val: op.content[i]\n                    });\n                  });\n                }\n              }), 't0', 2);\n\n            case 2:\n              return _context6.abrupt('return', new YArray(os, model.id, _content));\n\n            case 3:\n            case 'end':\n              return _context6.stop();\n          }\n        }\n      }, YArrayInitializer, this);\n    })\n  }));\n}\n\nmodule.exports = extend;\nif (typeof Y !== 'undefined') {\n  extend(Y);\n}\n\n},{}]},{},[1])\n\n"],"sourceRoot":"/source/"}